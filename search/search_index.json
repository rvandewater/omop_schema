{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to the <code>omop_schema</code> Documentation","text":"<p>The <code>omop_schema</code> package provides tools for working with OMOP Common Data Model (CDM) schemas, including schema validation, dataset loading, and schema conversion for Python libraries like PyArrow, Polars, and Pandas.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Schema Validation: Validate datasets against predefined OMOP CDM schemas.</li> <li>Graphical Validation: Display validation results in a graphical table format using the <code>rich</code> library.</li> <li>Schema Conversion: Convert PyArrow schemas to Polars or Pandas-compatible schemas.</li> <li>Dataset Loading: Load datasets from CSV files into PyArrow tables, ensuring they match the defined schema.</li> <li>Optional Dependencies: Support for Polars and Pandas as optional dependencies for schema conversion.</li> </ul>"},{"location":"#installation","title":"Installation","text":"<p>Install the package using <code>pip</code>:</p> <pre><code>pip install omop_schema\n</code></pre> <p>To include optional dependencies:</p> <pre><code>pip install omop_schema[polars]\npip install omop_schema[pandas]\npip install omop_schema[polars,pandas]\n</code></pre>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#1-define-and-retrieve-omop-schemas","title":"1. Define and Retrieve OMOP Schemas","text":"<p>Retrieve predefined schemas for OMOP CDM tables:</p> <pre><code>from omop_schema.schema.v54 import OMOPSchemaV54\n\nschema_v54 = OMOPSchemaV54()\nconcept_schema = schema_v54.get_pyarrow_schema(\"concept\")\nprint(concept_schema)\n</code></pre>"},{"location":"#2-validate-datasets-graphically","title":"2. Validate Datasets Graphically","text":"<p>Validate datasets and display results in a graphical table format:</p> <pre><code>from omop_schema.validate import OMOPValidator, validate_omop_dataset_graphically\nfrom omop_schema.schema.v54 import OMOPSchemaV54\n\nvalidator = OMOPValidator(schema=OMOPSchemaV54())\nvalidate_omop_dataset_graphically(validator, dataset_path=\"path/to/dataset\")\n</code></pre>"},{"location":"#3-convert-schemas","title":"3. Convert Schemas","text":"<p>Convert PyArrow schemas to Polars or Pandas-compatible schemas:</p> <pre><code>from omop_schema.utils import pyarrow_to_polars_schema, pyarrow_to_pandas_schema\nimport pyarrow as pa\n\narrow_schema = pa.schema(\n    [\n        pa.field(\"column1\", pa.int64()),\n        pa.field(\"column2\", pa.string()),\n    ]\n)\n\npolars_schema = pyarrow_to_polars_schema(arrow_schema)\npandas_schema = pyarrow_to_pandas_schema(arrow_schema)\nprint(polars_schema)\nprint(pandas_schema)\n</code></pre>"},{"location":"#learn-more","title":"Learn More","text":"<ul> <li>Installation Guide</li> <li>Usage Examples</li> <li>API Reference</li> <li>Contributing</li> </ul>"}]}